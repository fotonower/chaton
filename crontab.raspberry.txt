# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

eval `ssh-agent`
ssh-add

# try to launch script to take picture every minutes from 6am to 10pm
* 6-21 * * 1-5 python /home/pi/workarea/git/raspberrypi/get_pic_by_seconds.py -p 1 -e 22  >> ~/test_script.txt 2>&1
# upload photos every minutes
* 6-21 * * 1-5 python /home/pi/workarea/upload_photos.py >> ~/test_up.txt 2>&1
# upload failed uploaded batch
22 21 * * 1-5 python /home/pi/workarea/reprise_erreur_upload.py >> ~/reup.txt 2>&1

# delete the port_id file to get a new one the next day
#22 22 * * * rm /home/pi/workarea/port_id.txt

* * * * * /home/pi/workarea/conf_connection_charlot_raspi/test_and_launch.sh

22 * * * * python /home/pi/workarea/kill_tunnel.py 
 
