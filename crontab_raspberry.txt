
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

# launch ssh tunnel port toward charlot
* * * * * mkdir -p $LOGFOLDER/`date "+\%Y/\%m/\%d"`;/home/pi/workarea/git/raspberrypi/tunnel_ssh.sh $PORT >> $LOGFOLDER/`date "+\%Y/\%m/\%d"`/ssh_log`date "+\%H_\%M"`.txt 2>&1


# try to launch script to take picture every minutes from 6am to 10pm
* 6-21 * * 1-5 mkdir -p $LOGFOLDER/`date "+\%Y/\%m/\%d"`;python /home/pi//workarea/git/raspberrypi/raspberry_camera/python/main.py -f $BASEFOLDER -p $PAUSE -e $END >> $LOGFOLDER/`date "+\%Y/\%m/\%d"`/pic_log`date "+\%H_\%M"`.txt 2>&1

# upload photos every minutes
* 6-21 * * 1-5 mkdir -p $LOGFOLDER/`date "+\%Y/\%m/\%d"`;python /home/pi/workarea/git/raspberrypi/upload_photos.py -n $BASENAME -u $HOST_FOTONOWER -f $BASEFOLDER -t $TOKEN >> $LOGFOLDER/`date "+\%Y/\%m/\%d"`/upload_log`date "+\%H_\%M"`.txt 2>&1
# upload failed uploaded batch
22 21 * * 1-5 mkdir -p $LOGFOLDER/`date "+\%Y/\%m/\%d"`;python /home/pi/workarea/git/raspberrypi/reprise_erreur_upload.py -n $BASENAME -u $HOST_FOTONOWER -f $BASEFOLDER -t $TOKEN   >> $LOGFOLDER/`date "+\%Y/\%m/\%d"`/reupload_log`date "+\%H_\%M"`.txt 2>&1

# kill ssh tunnel in case
22 * * * * kill `ps -eo pid,args | grep charlot | grep -v grep | cut -d" " -f 2`
